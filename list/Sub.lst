C51 COMPILER V9.01   SUB                                                                   05/22/2018 09:30:09 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SUB
OBJECT MODULE PLACED IN .\obj\Sub.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE scr\Sub.c BROWSE DEBUG OBJECTEXTEND PRINT(.\list\Sub.lst) OBJECT(.\obj\Sub.
                    -obj)

line level    source

   1          /*--------------------------------文*件*信*息-----------------------------
   2          * 文件名：  Sub.c
   3          * 版　本：  v1.0
   4          * 描  述：  100T双轴 整合后的版本
   5          * 创建人：  
   6          * 日  期：  
   7          --------------------------------------------------------------------------
   8          *当前版本:      v1.0
   9          *修 改 人:
  10          *日　  期:
  11          ----------------------------------修改履历--------------------------------
  12          1、
  13          2、
  14          3、
  15          4、
  16          ------------------------------------------------------------------------*/
  17          #define   __SUB_C__
  18          #include  "_Include.h"
  19          //***********************************************************************/
  20          void Sub_16SBufSwitch (S16* buf,U8 i,U8 j);
  21          
  22          U8 xdata DispBuf[50];
  23          
  24          #if 0
              //***********************************************************************/
              // *功    能：
              // *入    口：
              // *出    口：
              // *备    注：
              // *函数性质：16有符号位转BCD 值存DisBuf数组，后将BCD存于发送缓冲区
              //***********************************************************************/
              void Comm_PutInt16s (S16 val)
              {
                      Sub_Int16s2Str(DispBuf,val);
                      Comm_PutStr((U8*)DispBuf,6);
              }
              //***********************************************************************/
              // *功    能：
              // *入    口：
              // *出    口：
              // *备    注：
              // *函数性质：16无符号位转BCD 值存DisBuf数组，后将BCD存于发送缓冲区
              //***********************************************************************/
              void Comm_PutInt16u (U16 val)
              {
                      Sub_Int16u2Str(DispBuf,val);
                      Comm_PutStr((U8*)DispBuf,5);
              }
              //***********************************************************************/
              // *功    能：
              // *入    口：
              // *出    口：
              // *备    注：
              // *函数性质：8位无符号位转BCD 值存DisBuf数组，后将BCD存于发送缓冲区
C51 COMPILER V9.01   SUB                                                                   05/22/2018 09:30:09 PAGE 2   

              //***********************************************************************/
              void Comm_PutInt8u (U8 val)
              {
                      Sub_Int8u2Str(DispBuf,val);
                      Comm_PutStr((U8*)DispBuf,3);
              }
              #endif
  62          
  63          //void Comm_PutInt32u (U32 val)
  64          //{
  65          //      Sub_Int32u2Str(DispBuf,val);
  66          //      Comm_PutStr(DispBuf,8);
  67          //      Comm_PutChar(10);
  68          //}
  69          //***********************************************************************/
  70          //***********************************************************************/
  71          // *功    能：
  72          // *入    口：
  73          // *出    口：
  74          // *备    注：
  75          // *函数性质：将回车换行的ASCII值存TX缓冲区
  76          //***********************************************************************/
  77          void Comm_PutNewLine (void)
  78          {
  79   1              Comm_PutChar(0x0D);
  80   1              Comm_PutChar(0x0A);
  81   1      }
  82          //***********************************************************************/
  83          // *功    能：
  84          // *入    口：
  85          // *出    口：
  86          // *备    注：
  87          // *函数性质：Send "ok"
  88          //***********************************************************************/
  89          void Sub_SendOk (void)
  90          {       
  91   1              char* str={",OK"};
  92   1              Comm_PutStr((U8*)str,3);
  93   1              Comm_PutNewLine();
  94   1              Comm_SendSta();
  95   1      }
  96          //***********************************************************************/
  97          void Sub_SendErr (void)
  98          {       char* str={"ERR"};
  99   1              
 100   1              
 101   1              Comm_PutStr((U8*)str,3);
 102   1              Comm_PutNewLine();
 103   1              Comm_SendSta();
 104   1      }
 105          
 106          //***********************************************************************/
 107          //int8u Sub_Str2Int16s (int16s *val,int8u* str)
 108          //{     int16u temp;
 109          //      if(FALSE==Sub_Str2Int16u(&temp,&str[1]))return (FALSE);
 110          //      
 111          //      if(str[0]=='+')
 112          //      {       *val = temp;
 113          //              return TRUE;
 114          //      }
 115          //      else if(str[0]=='-')
 116          //      {       *val = -temp;
C51 COMPILER V9.01   SUB                                                                   05/22/2018 09:30:09 PAGE 3   

 117          //              return TRUE;
 118          //      }
 119          //      return FALSE;
 120          //}
 121          //***********************************************************************/
 122          //***********************************************************************/
 123          U8 Sub_Str2Int8u (U8* str)
 124          {       U8 xdata val;   
 125   1              
 126   1              if((str[0]<'0')||(str[0]>'9'))return(100);
 127   1              if((str[1]<'0')||(str[1]>'9'))return(100);
 128   1              val=(str[0]-'0')*10+(str[1]-'0');
 129   1              return  val;
 130   1      }
 131          //***********************************************************************/
 132          
 133          
 134          /***********************************************************************/
 135          //void Sub_Int8u2Str (char* s,U8 val)
 136          //{
 137          //      s[0] = val/100+'0';
 138          //      val  = val%100;
 139          //      s[1] = val/10+'0';
 140          //}
 141          
 142          //void Sub_Int32u2Str (char* s,U32 val)
 143          //{     
 144          //      if(val>16777215)val = 16777215;         //数值溢出2013-7-15 11:56AM修改增加
 145          //      s[0] = val/10000000+'0';
 146          //      val  = val%10000000;
 147          //      s[1] = val/1000000+'0';
 148          //      val  = val%1000000;     
 149          //      s[2] = val/100000+'0';
 150          //      val  = val%100000;      
 151          //      s[3] = val/10000+'0';
 152          //      val  = val%10000;
 153          //      s[4] = val/1000+'0';
 154          //      val  = val%1000;
 155          //      s[5] = val/100+'0';
 156          //      val  = val%100;
 157          //      s[6] = val/10+'0';
 158          //      s[7] = val%10+'0';
 159          //}
 160          
 161           //HXL 12/8/28 
 162          //***********************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    108    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =     50       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
